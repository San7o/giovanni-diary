#+startup: content indent

[[file:../../index.org][Giovanni's Diary]] > [[file:../../subjects.org][Subjects]] > [[file:../programming.org][Programming]] > [[file:linux.org][Linux]] > [[file:notes.org][Notes]] >


* Monitor your Linux system with Prometheus and Grafana
:PROPERTIES:
:RSS: true
:DATE: 24 May 2025 00:00:00 GMT
:CATEGORY: Programming
:AUTHOR: Giovanni Santini
:LINK: https://giovanni-diary.netlify.app/programming/linux/linux-monitoring-with-prometheus-and-grafana.html
:END:
#+INDEX: Giovanni's Diary!Programming!Linux!Monitor your Linux system with Prometheus and Grafana

If you are managing any system, you need to have an effective way to
monitor, log and receive notifications about the state of the system.
A classic solution for Linux based servers is the Prometheus +
Grafana stack. In this document I will explain you how to setup this.

We will see how to setup both Prometheus and Grafana to monitor
various system statistics which are fetched by node exporter. I will
be using Fedora 42 as a base.

** Setting up node exporter

Node exporter is a service that collects various system information
such as CPU load, ram usage and much more. Fedora already provides
the package "node-exporter" and service "node exporter":

#+begin_src bash
  sudo dnf install node-exporter
  sudo systemctl start node_exporter
#+end_src

The service will listen on port 9100.

** Setting up Prometheus

You can download the latest version of Prometheus from GitHub:

#+begin_src bash
  LATEST=$(curl -s https://api.github.com/repos/prometheus/prometheus/releases/latest | jq -cr .tag_name)
  wget https://github.com/prometheus/prometheus/releases/download/$LATEST/prometheus-"${LATEST:1}".linux-amd64.tar.gz
  tar -xf prometheus-*
  cd prometheus-"${LATEST:1}".linux-amd64
  sudo cp prometheus /usr/local/bin/
#+end_src

You need to add node exporter to the list of services to scrape, you
should edit the "/etc/prometheus/prometheus.yml" file and add the
following Item in the "scrape configs" section:

#+begin_src yaml
scrape_configs:
  - job_name: 'linux-server'
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9100']
#+end_src

You can start the server by running the command "prometheus". It will
listen in port 9090 where you can access the html page. If you are not
lazy you can add a systemd service for prometheus (or whatever daemon
management you are using). To create a systemd service, add the
following content to the file
"/etc/systemd/system/prometheus.service":

#+begin_src toml
[Unit]
Description=Prometheus
Documentation=https://github.com/prometheus/prometheus
Wants=network-online.target
After=network-online.target

[Install]
WantedBy=multi-user.target

[Service]
Type=simple
User=prometheus
Group=prometheus
ExecReload=/bin/kill -HUP $MAINPID
ExecStart=/usr/local/bin/prometheus \
  --config.file=/etc/prometheus/prometheus.yml \
  --storage.tsdb.path=/etc/prometheus/data \
  --storage.tsdb.retention.time=30d
#+end_src

Then change permissions, reload the daemons and start the service:

#+begin_src bash
  sudo chown prometheus:prometheus -R /etc/prometheus
  sudo systemctl daemon-reload
  sudo systemctl start prometheus
#+end_src

** Setting up Grafana

Install Grafana from your favorite package manager:

#+begin_src bash
  sudo dnf install grafana
#+end_src

Fedora already creates a systemd service so you can start it as usual,
otherwise you can create the service yourself like we did before.

#+begin_src bash
  sudo systemctl start grafana-server
#+end_src

If you are using the default Fedora's SELinux, in order to allow
grafana to use the prometheus tcp socket we need to write a custom
policy. Create the file "grafana_websm.te" and add the following
content:

#+begin_src
module grafana_websm 1.0;

require {
    type grafana_t;
    type websm_port_t;
    class tcp_socket name_connect;
}

# Allow Grafana to connect to ports labeled websm_port_t
allow grafana_t websm_port_t:tcp_socket name_connect;
#+end_src

Then compile It and load It:

#+begin_src bash
  checkmodule -M -m -o grafana_websm.mod grafana_websm.te
  semodule_package -o grafana_websm.pp -m grafana_websm.mod
  sudo semodule -i grafana_websm.pp
#+end_src

Additionally, if you are using a firewall and you want to access
the port from another device, you need to enable the port 3000.
On firewalld, you can use the following commands:

#+begin_src bash
  sudo firewall-cmd --permanent --add-port=30002/tcp
  sudo firewall-cmd --reload
#+end_src


You can finally go to "http://localhost:3000" and login with "admin"
as the username and password and add prometheus as a source in Home >
Connections > Add a new connection and search for prometheus.

You can find already made dashboards for node exporter on the [[https://grafana.com/grafana/dashboards/?search=node+exporter][grafana
website]].


#+CAPTION: Grafana dashboard I found online
#+NAME:   fig:grafana-dashboard
#+ATTR_ORG: :align center
#+ATTR_HTML: :align center
#+ATTR_HTML: :width 600px
#+ATTR_ORG: :width 600px
[[../../ephemeris/images/grafana.png]]


-----

Travel: [[file:./notes.org][Linux Notes]], [[../../theindex.org][Index]]
